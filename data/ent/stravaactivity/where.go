// Code generated by ent, DO NOT EDIT.

package stravaactivity

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
	"github.com/ngdangkietswe/swe-integration-service/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldID, id))
}

// StravaActivityID applies equality check predicate on the "strava_activity_id" field. It's identical to StravaActivityIDEQ.
func StravaActivityID(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldStravaActivityID, v))
}

// AthleteID applies equality check predicate on the "athlete_id" field. It's identical to AthleteIDEQ.
func AthleteID(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldAthleteID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldUserID, v))
}

// ActivityName applies equality check predicate on the "activity_name" field. It's identical to ActivityNameEQ.
func ActivityName(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldActivityName, v))
}

// ActivityType applies equality check predicate on the "activity_type" field. It's identical to ActivityTypeEQ.
func ActivityType(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldActivityType, v))
}

// ActivityURL applies equality check predicate on the "activity_url" field. It's identical to ActivityURLEQ.
func ActivityURL(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldActivityURL, v))
}

// StartDate applies equality check predicate on the "start_date" field. It's identical to StartDateEQ.
func StartDate(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldStartDate, v))
}

// Distance applies equality check predicate on the "distance" field. It's identical to DistanceEQ.
func Distance(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldDistance, v))
}

// MovingTime applies equality check predicate on the "moving_time" field. It's identical to MovingTimeEQ.
func MovingTime(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldMovingTime, v))
}

// ElapsedTime applies equality check predicate on the "elapsed_time" field. It's identical to ElapsedTimeEQ.
func ElapsedTime(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldElapsedTime, v))
}

// TotalElevationGain applies equality check predicate on the "total_elevation_gain" field. It's identical to TotalElevationGainEQ.
func TotalElevationGain(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldTotalElevationGain, v))
}

// AverageSpeed applies equality check predicate on the "average_speed" field. It's identical to AverageSpeedEQ.
func AverageSpeed(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldAverageSpeed, v))
}

// MaxSpeed applies equality check predicate on the "max_speed" field. It's identical to MaxSpeedEQ.
func MaxSpeed(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldMaxSpeed, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldCreatedAt, v))
}

// StravaActivityIDEQ applies the EQ predicate on the "strava_activity_id" field.
func StravaActivityIDEQ(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldStravaActivityID, v))
}

// StravaActivityIDNEQ applies the NEQ predicate on the "strava_activity_id" field.
func StravaActivityIDNEQ(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldStravaActivityID, v))
}

// StravaActivityIDIn applies the In predicate on the "strava_activity_id" field.
func StravaActivityIDIn(vs ...int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldStravaActivityID, vs...))
}

// StravaActivityIDNotIn applies the NotIn predicate on the "strava_activity_id" field.
func StravaActivityIDNotIn(vs ...int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldStravaActivityID, vs...))
}

// StravaActivityIDGT applies the GT predicate on the "strava_activity_id" field.
func StravaActivityIDGT(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldStravaActivityID, v))
}

// StravaActivityIDGTE applies the GTE predicate on the "strava_activity_id" field.
func StravaActivityIDGTE(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldStravaActivityID, v))
}

// StravaActivityIDLT applies the LT predicate on the "strava_activity_id" field.
func StravaActivityIDLT(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldStravaActivityID, v))
}

// StravaActivityIDLTE applies the LTE predicate on the "strava_activity_id" field.
func StravaActivityIDLTE(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldStravaActivityID, v))
}

// AthleteIDEQ applies the EQ predicate on the "athlete_id" field.
func AthleteIDEQ(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldAthleteID, v))
}

// AthleteIDNEQ applies the NEQ predicate on the "athlete_id" field.
func AthleteIDNEQ(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldAthleteID, v))
}

// AthleteIDIn applies the In predicate on the "athlete_id" field.
func AthleteIDIn(vs ...int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldAthleteID, vs...))
}

// AthleteIDNotIn applies the NotIn predicate on the "athlete_id" field.
func AthleteIDNotIn(vs ...int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldAthleteID, vs...))
}

// AthleteIDGT applies the GT predicate on the "athlete_id" field.
func AthleteIDGT(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldAthleteID, v))
}

// AthleteIDGTE applies the GTE predicate on the "athlete_id" field.
func AthleteIDGTE(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldAthleteID, v))
}

// AthleteIDLT applies the LT predicate on the "athlete_id" field.
func AthleteIDLT(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldAthleteID, v))
}

// AthleteIDLTE applies the LTE predicate on the "athlete_id" field.
func AthleteIDLTE(v int64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldAthleteID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldUserID, vs...))
}

// ActivityNameEQ applies the EQ predicate on the "activity_name" field.
func ActivityNameEQ(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldActivityName, v))
}

// ActivityNameNEQ applies the NEQ predicate on the "activity_name" field.
func ActivityNameNEQ(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldActivityName, v))
}

// ActivityNameIn applies the In predicate on the "activity_name" field.
func ActivityNameIn(vs ...string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldActivityName, vs...))
}

// ActivityNameNotIn applies the NotIn predicate on the "activity_name" field.
func ActivityNameNotIn(vs ...string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldActivityName, vs...))
}

// ActivityNameGT applies the GT predicate on the "activity_name" field.
func ActivityNameGT(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldActivityName, v))
}

// ActivityNameGTE applies the GTE predicate on the "activity_name" field.
func ActivityNameGTE(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldActivityName, v))
}

// ActivityNameLT applies the LT predicate on the "activity_name" field.
func ActivityNameLT(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldActivityName, v))
}

// ActivityNameLTE applies the LTE predicate on the "activity_name" field.
func ActivityNameLTE(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldActivityName, v))
}

// ActivityNameContains applies the Contains predicate on the "activity_name" field.
func ActivityNameContains(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldContains(FieldActivityName, v))
}

// ActivityNameHasPrefix applies the HasPrefix predicate on the "activity_name" field.
func ActivityNameHasPrefix(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldHasPrefix(FieldActivityName, v))
}

// ActivityNameHasSuffix applies the HasSuffix predicate on the "activity_name" field.
func ActivityNameHasSuffix(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldHasSuffix(FieldActivityName, v))
}

// ActivityNameEqualFold applies the EqualFold predicate on the "activity_name" field.
func ActivityNameEqualFold(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEqualFold(FieldActivityName, v))
}

// ActivityNameContainsFold applies the ContainsFold predicate on the "activity_name" field.
func ActivityNameContainsFold(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldContainsFold(FieldActivityName, v))
}

// ActivityTypeEQ applies the EQ predicate on the "activity_type" field.
func ActivityTypeEQ(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldActivityType, v))
}

// ActivityTypeNEQ applies the NEQ predicate on the "activity_type" field.
func ActivityTypeNEQ(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldActivityType, v))
}

// ActivityTypeIn applies the In predicate on the "activity_type" field.
func ActivityTypeIn(vs ...int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldActivityType, vs...))
}

// ActivityTypeNotIn applies the NotIn predicate on the "activity_type" field.
func ActivityTypeNotIn(vs ...int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldActivityType, vs...))
}

// ActivityTypeGT applies the GT predicate on the "activity_type" field.
func ActivityTypeGT(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldActivityType, v))
}

// ActivityTypeGTE applies the GTE predicate on the "activity_type" field.
func ActivityTypeGTE(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldActivityType, v))
}

// ActivityTypeLT applies the LT predicate on the "activity_type" field.
func ActivityTypeLT(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldActivityType, v))
}

// ActivityTypeLTE applies the LTE predicate on the "activity_type" field.
func ActivityTypeLTE(v int) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldActivityType, v))
}

// ActivityURLEQ applies the EQ predicate on the "activity_url" field.
func ActivityURLEQ(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldActivityURL, v))
}

// ActivityURLNEQ applies the NEQ predicate on the "activity_url" field.
func ActivityURLNEQ(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldActivityURL, v))
}

// ActivityURLIn applies the In predicate on the "activity_url" field.
func ActivityURLIn(vs ...string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldActivityURL, vs...))
}

// ActivityURLNotIn applies the NotIn predicate on the "activity_url" field.
func ActivityURLNotIn(vs ...string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldActivityURL, vs...))
}

// ActivityURLGT applies the GT predicate on the "activity_url" field.
func ActivityURLGT(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldActivityURL, v))
}

// ActivityURLGTE applies the GTE predicate on the "activity_url" field.
func ActivityURLGTE(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldActivityURL, v))
}

// ActivityURLLT applies the LT predicate on the "activity_url" field.
func ActivityURLLT(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldActivityURL, v))
}

// ActivityURLLTE applies the LTE predicate on the "activity_url" field.
func ActivityURLLTE(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldActivityURL, v))
}

// ActivityURLContains applies the Contains predicate on the "activity_url" field.
func ActivityURLContains(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldContains(FieldActivityURL, v))
}

// ActivityURLHasPrefix applies the HasPrefix predicate on the "activity_url" field.
func ActivityURLHasPrefix(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldHasPrefix(FieldActivityURL, v))
}

// ActivityURLHasSuffix applies the HasSuffix predicate on the "activity_url" field.
func ActivityURLHasSuffix(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldHasSuffix(FieldActivityURL, v))
}

// ActivityURLEqualFold applies the EqualFold predicate on the "activity_url" field.
func ActivityURLEqualFold(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEqualFold(FieldActivityURL, v))
}

// ActivityURLContainsFold applies the ContainsFold predicate on the "activity_url" field.
func ActivityURLContainsFold(v string) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldContainsFold(FieldActivityURL, v))
}

// StartDateEQ applies the EQ predicate on the "start_date" field.
func StartDateEQ(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldStartDate, v))
}

// StartDateNEQ applies the NEQ predicate on the "start_date" field.
func StartDateNEQ(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldStartDate, v))
}

// StartDateIn applies the In predicate on the "start_date" field.
func StartDateIn(vs ...time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldStartDate, vs...))
}

// StartDateNotIn applies the NotIn predicate on the "start_date" field.
func StartDateNotIn(vs ...time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldStartDate, vs...))
}

// StartDateGT applies the GT predicate on the "start_date" field.
func StartDateGT(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldStartDate, v))
}

// StartDateGTE applies the GTE predicate on the "start_date" field.
func StartDateGTE(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldStartDate, v))
}

// StartDateLT applies the LT predicate on the "start_date" field.
func StartDateLT(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldStartDate, v))
}

// StartDateLTE applies the LTE predicate on the "start_date" field.
func StartDateLTE(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldStartDate, v))
}

// DistanceEQ applies the EQ predicate on the "distance" field.
func DistanceEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldDistance, v))
}

// DistanceNEQ applies the NEQ predicate on the "distance" field.
func DistanceNEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldDistance, v))
}

// DistanceIn applies the In predicate on the "distance" field.
func DistanceIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldDistance, vs...))
}

// DistanceNotIn applies the NotIn predicate on the "distance" field.
func DistanceNotIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldDistance, vs...))
}

// DistanceGT applies the GT predicate on the "distance" field.
func DistanceGT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldDistance, v))
}

// DistanceGTE applies the GTE predicate on the "distance" field.
func DistanceGTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldDistance, v))
}

// DistanceLT applies the LT predicate on the "distance" field.
func DistanceLT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldDistance, v))
}

// DistanceLTE applies the LTE predicate on the "distance" field.
func DistanceLTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldDistance, v))
}

// MovingTimeEQ applies the EQ predicate on the "moving_time" field.
func MovingTimeEQ(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldMovingTime, v))
}

// MovingTimeNEQ applies the NEQ predicate on the "moving_time" field.
func MovingTimeNEQ(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldMovingTime, v))
}

// MovingTimeIn applies the In predicate on the "moving_time" field.
func MovingTimeIn(vs ...int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldMovingTime, vs...))
}

// MovingTimeNotIn applies the NotIn predicate on the "moving_time" field.
func MovingTimeNotIn(vs ...int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldMovingTime, vs...))
}

// MovingTimeGT applies the GT predicate on the "moving_time" field.
func MovingTimeGT(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldMovingTime, v))
}

// MovingTimeGTE applies the GTE predicate on the "moving_time" field.
func MovingTimeGTE(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldMovingTime, v))
}

// MovingTimeLT applies the LT predicate on the "moving_time" field.
func MovingTimeLT(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldMovingTime, v))
}

// MovingTimeLTE applies the LTE predicate on the "moving_time" field.
func MovingTimeLTE(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldMovingTime, v))
}

// ElapsedTimeEQ applies the EQ predicate on the "elapsed_time" field.
func ElapsedTimeEQ(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldElapsedTime, v))
}

// ElapsedTimeNEQ applies the NEQ predicate on the "elapsed_time" field.
func ElapsedTimeNEQ(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldElapsedTime, v))
}

// ElapsedTimeIn applies the In predicate on the "elapsed_time" field.
func ElapsedTimeIn(vs ...int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldElapsedTime, vs...))
}

// ElapsedTimeNotIn applies the NotIn predicate on the "elapsed_time" field.
func ElapsedTimeNotIn(vs ...int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldElapsedTime, vs...))
}

// ElapsedTimeGT applies the GT predicate on the "elapsed_time" field.
func ElapsedTimeGT(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldElapsedTime, v))
}

// ElapsedTimeGTE applies the GTE predicate on the "elapsed_time" field.
func ElapsedTimeGTE(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldElapsedTime, v))
}

// ElapsedTimeLT applies the LT predicate on the "elapsed_time" field.
func ElapsedTimeLT(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldElapsedTime, v))
}

// ElapsedTimeLTE applies the LTE predicate on the "elapsed_time" field.
func ElapsedTimeLTE(v int32) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldElapsedTime, v))
}

// TotalElevationGainEQ applies the EQ predicate on the "total_elevation_gain" field.
func TotalElevationGainEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldTotalElevationGain, v))
}

// TotalElevationGainNEQ applies the NEQ predicate on the "total_elevation_gain" field.
func TotalElevationGainNEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldTotalElevationGain, v))
}

// TotalElevationGainIn applies the In predicate on the "total_elevation_gain" field.
func TotalElevationGainIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldTotalElevationGain, vs...))
}

// TotalElevationGainNotIn applies the NotIn predicate on the "total_elevation_gain" field.
func TotalElevationGainNotIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldTotalElevationGain, vs...))
}

// TotalElevationGainGT applies the GT predicate on the "total_elevation_gain" field.
func TotalElevationGainGT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldTotalElevationGain, v))
}

// TotalElevationGainGTE applies the GTE predicate on the "total_elevation_gain" field.
func TotalElevationGainGTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldTotalElevationGain, v))
}

// TotalElevationGainLT applies the LT predicate on the "total_elevation_gain" field.
func TotalElevationGainLT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldTotalElevationGain, v))
}

// TotalElevationGainLTE applies the LTE predicate on the "total_elevation_gain" field.
func TotalElevationGainLTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldTotalElevationGain, v))
}

// AverageSpeedEQ applies the EQ predicate on the "average_speed" field.
func AverageSpeedEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldAverageSpeed, v))
}

// AverageSpeedNEQ applies the NEQ predicate on the "average_speed" field.
func AverageSpeedNEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldAverageSpeed, v))
}

// AverageSpeedIn applies the In predicate on the "average_speed" field.
func AverageSpeedIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldAverageSpeed, vs...))
}

// AverageSpeedNotIn applies the NotIn predicate on the "average_speed" field.
func AverageSpeedNotIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldAverageSpeed, vs...))
}

// AverageSpeedGT applies the GT predicate on the "average_speed" field.
func AverageSpeedGT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldAverageSpeed, v))
}

// AverageSpeedGTE applies the GTE predicate on the "average_speed" field.
func AverageSpeedGTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldAverageSpeed, v))
}

// AverageSpeedLT applies the LT predicate on the "average_speed" field.
func AverageSpeedLT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldAverageSpeed, v))
}

// AverageSpeedLTE applies the LTE predicate on the "average_speed" field.
func AverageSpeedLTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldAverageSpeed, v))
}

// MaxSpeedEQ applies the EQ predicate on the "max_speed" field.
func MaxSpeedEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldMaxSpeed, v))
}

// MaxSpeedNEQ applies the NEQ predicate on the "max_speed" field.
func MaxSpeedNEQ(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldMaxSpeed, v))
}

// MaxSpeedIn applies the In predicate on the "max_speed" field.
func MaxSpeedIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldMaxSpeed, vs...))
}

// MaxSpeedNotIn applies the NotIn predicate on the "max_speed" field.
func MaxSpeedNotIn(vs ...float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldMaxSpeed, vs...))
}

// MaxSpeedGT applies the GT predicate on the "max_speed" field.
func MaxSpeedGT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldMaxSpeed, v))
}

// MaxSpeedGTE applies the GTE predicate on the "max_speed" field.
func MaxSpeedGTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldMaxSpeed, v))
}

// MaxSpeedLT applies the LT predicate on the "max_speed" field.
func MaxSpeedLT(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldMaxSpeed, v))
}

// MaxSpeedLTE applies the LTE predicate on the "max_speed" field.
func MaxSpeedLTE(v float64) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldMaxSpeed, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.StravaActivity {
	return predicate.StravaActivity(sql.FieldLTE(FieldCreatedAt, v))
}

// HasCdcAuthUsers applies the HasEdge predicate on the "cdc_auth_users" edge.
func HasCdcAuthUsers() predicate.StravaActivity {
	return predicate.StravaActivity(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CdcAuthUsersTable, CdcAuthUsersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCdcAuthUsersWith applies the HasEdge predicate on the "cdc_auth_users" edge with a given conditions (other predicates).
func HasCdcAuthUsersWith(preds ...predicate.CdcAuthUsers) predicate.StravaActivity {
	return predicate.StravaActivity(func(s *sql.Selector) {
		step := newCdcAuthUsersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.StravaActivity) predicate.StravaActivity {
	return predicate.StravaActivity(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.StravaActivity) predicate.StravaActivity {
	return predicate.StravaActivity(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.StravaActivity) predicate.StravaActivity {
	return predicate.StravaActivity(sql.NotPredicates(p))
}
